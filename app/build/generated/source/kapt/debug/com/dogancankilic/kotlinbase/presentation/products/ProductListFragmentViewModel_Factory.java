// Generated by Dagger (https://dagger.dev).
package com.dogancankilic.kotlinbase.presentation.products;

import com.dogancankilic.kotlinbase.domain.products.ProductsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductListFragmentViewModel_Factory implements Factory<ProductListFragmentViewModel> {
  private final Provider<ProductsUseCase> productsUseCaseProvider;

  public ProductListFragmentViewModel_Factory(Provider<ProductsUseCase> productsUseCaseProvider) {
    this.productsUseCaseProvider = productsUseCaseProvider;
  }

  @Override
  public ProductListFragmentViewModel get() {
    return newInstance(productsUseCaseProvider.get());
  }

  public static ProductListFragmentViewModel_Factory create(
      Provider<ProductsUseCase> productsUseCaseProvider) {
    return new ProductListFragmentViewModel_Factory(productsUseCaseProvider);
  }

  public static ProductListFragmentViewModel newInstance(ProductsUseCase productsUseCase) {
    return new ProductListFragmentViewModel(productsUseCase);
  }
}
