// Generated by Dagger (https://dagger.dev).
package com.dogancankilic.kotlinbase.domain.productdetail;

import com.dogancankilic.kotlinbase.data.products.ProductsDataSourceImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductDetailUseCase_Factory implements Factory<ProductDetailUseCase> {
  private final Provider<ProductsDataSourceImpl> remoteDataSourceProvider;

  public ProductDetailUseCase_Factory(Provider<ProductsDataSourceImpl> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public ProductDetailUseCase get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static ProductDetailUseCase_Factory create(
      Provider<ProductsDataSourceImpl> remoteDataSourceProvider) {
    return new ProductDetailUseCase_Factory(remoteDataSourceProvider);
  }

  public static ProductDetailUseCase newInstance(ProductsDataSourceImpl remoteDataSource) {
    return new ProductDetailUseCase(remoteDataSource);
  }
}
