// Generated by Dagger (https://dagger.dev).
package com.dogancankilic.kotlinbase.core.platform;

import androidx.databinding.ViewDataBinding;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragment_MembersInjector<T extends ViewDataBinding, VM extends BaseViewModel> implements MembersInjector<BaseFragment<T, VM>> {
  private final Provider<VM> viewModelProvider;

  public BaseFragment_MembersInjector(Provider<VM> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static <T extends ViewDataBinding, VM extends BaseViewModel> MembersInjector<BaseFragment<T, VM>> create(
      Provider<VM> viewModelProvider) {
    return new BaseFragment_MembersInjector<T, VM>(viewModelProvider);
  }

  @Override
  public void injectMembers(BaseFragment<T, VM> instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("com.dogancankilic.kotlinbase.core.platform.BaseFragment.viewModel")
  public static <T extends ViewDataBinding, VM extends BaseViewModel> void injectViewModel(
      BaseFragment<T, VM> instance, VM viewModel) {
    instance.viewModel = viewModel;
  }
}
